Terminals unused in grammar

   MUL
   DIV


State 33 conflicts: 2 shift/reduce
State 34 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_list END

    2 function_list: function
    3              | function_list function

    4 function: INT ID LPAREN RPAREN LBRACE statement_list RBRACE

    5 statement_list: stmt
    6               | statement_list stmt

    7 stmt: INT ID SEMICOLON
    8     | FLOAT ID SEMICOLON
    9     | ID ASSIGN expr SEMICOLON
   10     | RETURN expr SEMICOLON

   11 expr: NUM
   12     | ID
   13     | expr PLUS expr
   14     | expr MINUS expr


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 4 7 8 9 12
INT (259) 4 7
FLOAT (260) 8
RETURN (261) 10
PLUS (262) 13
MINUS (263) 14
MUL (264)
DIV (265)
ASSIGN (266) 9
SEMICOLON (267) 7 8 9 10
LPAREN (268) 4
RPAREN (269) 4
LBRACE (270) 4
RBRACE (271) 4
NUM (272) 11
END (273) 1


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
function_list (21)
    on left: 2 3, on right: 1 3
function (22)
    on left: 4, on right: 2 3
statement_list (23)
    on left: 5 6, on right: 4 6
stmt (24)
    on left: 7 8 9 10, on right: 5 6
expr (25)
    on left: 11 12 13 14, on right: 9 10 13 14


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    4 function: INT . ID LPAREN RPAREN LBRACE statement_list RBRACE

    ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list . END
    3 function_list: function_list . function

    INT  shift, and go to state 1
    END  shift, and go to state 7

    function  go to state 8


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    4 function: INT ID . LPAREN RPAREN LBRACE statement_list RBRACE

    LPAREN  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    1 program: function_list END .

    $default  reduce using rule 1 (program)


State 8

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 9

    4 function: INT ID LPAREN . RPAREN LBRACE statement_list RBRACE

    RPAREN  shift, and go to state 10


State 10

    4 function: INT ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 11


State 11

    4 function: INT ID LPAREN RPAREN LBRACE . statement_list RBRACE

    ID      shift, and go to state 12
    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    RETURN  shift, and go to state 15

    statement_list  go to state 16
    stmt            go to state 17


State 12

    9 stmt: ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 18


State 13

    7 stmt: INT . ID SEMICOLON

    ID  shift, and go to state 19


State 14

    8 stmt: FLOAT . ID SEMICOLON

    ID  shift, and go to state 20


State 15

   10 stmt: RETURN . expr SEMICOLON

    ID   shift, and go to state 21
    NUM  shift, and go to state 22

    expr  go to state 23


State 16

    4 function: INT ID LPAREN RPAREN LBRACE statement_list . RBRACE
    6 statement_list: statement_list . stmt

    ID      shift, and go to state 12
    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    RETURN  shift, and go to state 15
    RBRACE  shift, and go to state 24

    stmt  go to state 25


State 17

    5 statement_list: stmt .

    $default  reduce using rule 5 (statement_list)


State 18

    9 stmt: ID ASSIGN . expr SEMICOLON

    ID   shift, and go to state 21
    NUM  shift, and go to state 22

    expr  go to state 26


State 19

    7 stmt: INT ID . SEMICOLON

    SEMICOLON  shift, and go to state 27


State 20

    8 stmt: FLOAT ID . SEMICOLON

    SEMICOLON  shift, and go to state 28


State 21

   12 expr: ID .

    $default  reduce using rule 12 (expr)


State 22

   11 expr: NUM .

    $default  reduce using rule 11 (expr)


State 23

   10 stmt: RETURN expr . SEMICOLON
   13 expr: expr . PLUS expr
   14     | expr . MINUS expr

    PLUS       shift, and go to state 29
    MINUS      shift, and go to state 30
    SEMICOLON  shift, and go to state 31


State 24

    4 function: INT ID LPAREN RPAREN LBRACE statement_list RBRACE .

    $default  reduce using rule 4 (function)


State 25

    6 statement_list: statement_list stmt .

    $default  reduce using rule 6 (statement_list)


State 26

    9 stmt: ID ASSIGN expr . SEMICOLON
   13 expr: expr . PLUS expr
   14     | expr . MINUS expr

    PLUS       shift, and go to state 29
    MINUS      shift, and go to state 30
    SEMICOLON  shift, and go to state 32


State 27

    7 stmt: INT ID SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 28

    8 stmt: FLOAT ID SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 29

   13 expr: expr PLUS . expr

    ID   shift, and go to state 21
    NUM  shift, and go to state 22

    expr  go to state 33


State 30

   14 expr: expr MINUS . expr

    ID   shift, and go to state 21
    NUM  shift, and go to state 22

    expr  go to state 34


State 31

   10 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 32

    9 stmt: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 33

   13 expr: expr . PLUS expr
   13     | expr PLUS expr .
   14     | expr . MINUS expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30

    PLUS      [reduce using rule 13 (expr)]
    MINUS     [reduce using rule 13 (expr)]
    $default  reduce using rule 13 (expr)


State 34

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   14     | expr MINUS expr .

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30

    PLUS      [reduce using rule 14 (expr)]
    MINUS     [reduce using rule 14 (expr)]
    $default  reduce using rule 14 (expr)
